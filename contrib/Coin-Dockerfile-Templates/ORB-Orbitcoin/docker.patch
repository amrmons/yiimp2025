diff --git a/src/Makefile.linux b/src/Makefile.linux
index 2c099f7f..e294d2a1 100644
--- a/src/Makefile.linux
+++ b/src/Makefile.linux
@@ -3,7 +3,7 @@
 # Distributed under the MIT/X11 software license, see the accompanying
 # file COPYING or http://www.opensource.org/licenses/mit-license.php.
 
-USE_UPNP:=0
+USE_UPNP:=-
 USE_IPV6:=1
 
 CC = gcc
diff --git a/src/rpcmining.cpp b/src/rpcmining.cpp
index 845bfa56..a8db3e2f 100644
--- a/src/rpcmining.cpp
+++ b/src/rpcmining.cpp
@@ -428,6 +428,35 @@ Value getblocktemplate(const Array &params, bool fHelp) {
     result.push_back(Pair("bits", HexBits(pblock->nBits)));
     result.push_back(Pair("height", (int64_t)(pindexPrev->nHeight + 1)));
 
+    bool mining_useless = false;
+    uint nOurTime   = (uint)GetAdjustedTime();
+    int nHeight = pindexPrev->nHeight+1;
+    int64 nTime = pblock->nTime;
+
+    /* Old block limiter; to be disabled after nForkSeven */
+    if((nHeight > nForkThree) && (nTime <= ((uint)pindexPrev->GetMedianTimePast() + BLOCK_LIMITER_TIME_OLD))) {
+       mining_useless = true;
+    }
+
+    /* Old future travel detector for the block limiter; to be disabled after nForkSeven */
+    if((nHeight > nForkFive) && (nTime > (nOurTime + 60)) &&
+      ((pindexPrev->GetAverageTimePast(5, 20) + BLOCK_LIMITER_TIME_OLD) > nOurTime)) {
+       mining_useless = true;
+    }
+
+    /* New block limiter */
+    if((nHeight > nForkSeven) && (nTime <= ((uint)pindexPrev->GetMedianTimePast() + BLOCK_LIMITER_TIME_NEW))) {
+       mining_useless = true;
+    }
+
+    /* New future travel detector for the block limiter */
+    if((nHeight > nForkSeven) && (nTime > (nOurTime + 60)) &&
+      ((pindexPrev->GetAverageTimePast(5, 40) + BLOCK_LIMITER_TIME_NEW) > nOurTime)) {
+       mining_useless = true;
+    }
+
+    result.push_back(Pair("mining_useless", (mining_useless)? true : false ));
+
     return result;
 }
 
